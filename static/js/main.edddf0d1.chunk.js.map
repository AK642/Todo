{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","TextField","id","label","todo","variant","size","value","onChange","event","target","Button","disabled","onClick","collection","doc","set","task","merge","color","disableElevation","List","ListItem","ListItemText","primary","secondary","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edddf0d1.chunk.js","sourcesContent":["//const firebaseConfig = {\n//    apiKey: \"AIzaSyA7yaXas-oT5mnKDq3iGHeVjBLraay4JUM\",\n//    authDomain: \"todo-app-670c7.firebaseapp.com\",\n//    databaseURL: \"https://todo-app-670c7.firebaseio.com\",\n//    projectId: \"todo-app-670c7\",\n//    storageBucket: \"todo-app-670c7.appspot.com\",\n//    messagingSenderId: \"1063625929782\",\n//    appId: \"1:1063625929782:web:d3f36c35a4573c2ad69497\",\n//    measurementId: \"G-HLXSYTMKTF\"\n//  };\n\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyA7yaXas-oT5mnKDq3iGHeVjBLraay4JUM\",\n    authDomain: \"todo-app-670c7.firebaseapp.com\",\n    databaseURL: \"https://todo-app-670c7.firebaseio.com\",\n    projectId: \"todo-app-670c7\",\n    storageBucket: \"todo-app-670c7.appspot.com\",\n    messagingSenderId: \"1063625929782\",\n    appId: \"1:1063625929782:web:d3f36c35a4573c2ad69497\",\n    measurementId: \"G-HLXSYTMKTF\"\n});\n\nconst db = firebaseApp.firestore();\n\nexport default db;","import { List, ListItem, ListItemText, Button, Modal, makeStyles, TextField } from '@material-ui/core';\nimport React, {useState} from 'react';\nimport db from './firebase';\nimport './Todo.css';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\nfunction Todo(props) {\n    \n    const classes = useStyles();\n\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState('');\n\n    //const handleOpen = () => {\n    //    setOpen(true);\n    //};\n\n    const upadteTodo = () => {\n        db.collection('todos').doc(props.todo.id).set({\n            task: input\n        },{ merge: true })\n        setOpen(false);\n        setInput('');\n    }\n    return (\n        <>\n        <Modal\n            open={open}\n            onClose={e => setOpen(false)}\n        >\n            <div className={classes.paper}>\n                <h4>Change your task Here.....</h4>\n                <TextField id=\"outlined-basic\" label={props.todo.todo} variant=\"outlined\" size=\"small\" value={input} onChange={event => setInput(event.target.value)}/>\n                <Button disabled={!input} onClick={upadteTodo} variant=\"contained\" color=\"primary\" disableElevation>Update Task</Button>\n            </div>\n\n        </Modal>\n\n        <List className=\"todo_list\">\n            <ListItem className=\"list_item\">\n                <ListItemText primary={props.todo.todo} secondary=\"Dummy deadline ⏲️\"/>\n                <button onClick={e => setOpen(true)}>Edit</button>\n                <DeleteForeverIcon onClick={event => db.collection('todos').doc(props.todo.id).delete()}>Delete</DeleteForeverIcon>\n            </ListItem>\n        </List>\n        </>\n    )\n}\n\nexport default Todo\n","import React,{ useEffect, useState} from 'react';\nimport Todo from './Todo'\nimport './App.css';\nimport { Button, FormControl, TextField } from '@material-ui/core';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id: doc.id, todo: doc.data().task})))\n    })\n  }, [input]);\n\n  const addTodo = (event) => {\n    event.preventDefault();\n\n    db.collection('todos').add({\n      task: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    setTodos([...todos,input]);\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome To TODO App</h1>\n      <form>\n\n        <FormControl>\n          <TextField id=\"standard-basic\" label=\"Write a Task\" size=\"small\" value={input} onChange={event => setInput(event.target.value)}/>\n        </FormControl>\n\n        <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\" disableElevation>\n          Add Task\n        </Button>\n      </form>\n      <ul>\n        {todos.map(todo => (\n          \n          <Todo todo={todo}/>\n          //<li>{todo}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
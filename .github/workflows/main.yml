# name: CI/CD for react Todo

# on:
#   push:
#     branches:
#       - master

# jobs:
#   # Build Job
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Install Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: 12.x

#       - name: Install Dependencies
#         run: |
#           npm install

#       - name: Build Project
#         run: |
#           npm run build

#       - name: Upload artifact to enable deployment
#         uses: actions/upload-artifact@v4
#         with:
#           name: production-file
#           path: ./build

#   # Deploy Job
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: production-file
#           path: ./build

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.KEY }} #this is the key of the access token
#           publish_dir: ./build

name: Multi-Environment CI/CD for Todo

on:
  push:
    branches:
      - master
  pull_request:
    types: [closed]    # only when PR is closed (merged or discarded)
    branches:
      - master         # target branch must be master
  workflow_dispatch:
    inputs:
      target_env:
        description: 'Target environment'
        required: true
        default: 'stag'
        type: choice
        options:
          - stag
          - prod

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 12.x

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Upload artifact to enable deployment
        uses: actions/upload-artifact@v4
        with:
          name: production-file
          path: ./build

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    if: github.event_name == 'push'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-file
          path: ./build

      - name: Deploy to Dev
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.KEY_DEV }}
          publish_dir: ./build

  deploy-stag:
    needs: build
    runs-on: ubuntu-latest
    environment: stag
    if: github.event.inputs.target_env == 'stag'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-file
          path: ./build

      - name: Deploy to Staging
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.KEY_STAG }}
          publish_dir: ./build

  deploy-prod:
    needs: build
    runs-on: ubuntu-latest
    environment: prod
    if: github.event.inputs.target_env == 'prod'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-file
          path: ./build

      - name: Deploy to Production
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.KEY_PROD }}
          publish_dir: ./build
